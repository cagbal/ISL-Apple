function [ minima ] = findMinima( apf, I )
close all
clc
%findMinima find local minimum points on artificial potential function
% by using Gradient Descent
%Input:
% 2D Artificial Potential Function
%Output:
% minima: coordinates of local minimum points of APF
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                             Cagatay Odabasi                             %
%                        cagatayodabasi91@gmail.com                       %
%                       Intelligent Systems Labratory                     %
%                           Bogazici University                           %                        %
%                                26.06.2015                               %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% step_size
dt = 0.001;

% tolerance
tol = 0.0001;

% learning rate
gama = 30000;

% threshold for color tolerance


% initialize x and y values
%x = size(apf,1)/2;
%y = size(apf,2)/2;
x = 500;
y = 569;

% fovea size
dx = 5;
dy = 5;

% difference between old and new values of x and y
dif = 1;

% numerical differentiation
%[FY,FX] = gradient(apf);

% apply threshold on apf to get rid of background
apf_bw = im2bw(1-apf, 0.1);

% open the image 
%apf_bw = imopen(apf_bw);

% get the Connected Components of image
CC = bwconncomp(apf_bw);

% get the centroids of CC
S = regionprops(CC,'Centroid');
'Eccentricity'
%imshow(apf_bw)

S

end

